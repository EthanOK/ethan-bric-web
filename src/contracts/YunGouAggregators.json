[
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address[]",
            "name": "tokenAddrs",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct YunGouAggregators.ERC20Details",
        "name": "erc20Details",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "tradeData",
            "type": "bytes"
          }
        ],
        "internalType": "struct MarketRegistry.TradeDetails[]",
        "name": "tradeDetails",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "bytes",
            "name": "conversionData",
            "type": "bytes"
          }
        ],
        "internalType": "struct YunGouAggregators.ConverstionDetails[]",
        "name": "converstionDetails",
        "type": "tuple[]"
      },
      {
        "internalType": "address[]",
        "name": "dustTokens",
        "type": "address[]"
      }
    ],
    "name": "batchBuyWithERC20s",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "tradeData",
            "type": "bytes"
          }
        ],
        "internalType": "struct MarketRegistry.TradeDetails[]",
        "name": "tradeDetails",
        "type": "tuple[]"
      }
    ],
    "name": "batchBuyWithETH",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_marketRegistry",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_converter",
        "type": "address"
      }
    ],
    "name": "setConverter",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "converter",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "marketRegistry",
    "outputs": [
      {
        "internalType": "contract MarketRegistry",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
